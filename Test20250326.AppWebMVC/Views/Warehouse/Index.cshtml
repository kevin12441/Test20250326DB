@model IEnumerable<Test20250326.AppWebMVC.Models.Warehouse>

@{
    ViewData["Title"] = "Índice";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    string nombre = ViewBag.Nombre;
    int topRegistro = ViewBag.TopRegistro ?? 10;
    int totalRecords = ViewBag.TotalRecords ?? 0;
}

<div class="container mt-5">
    <h1 class="mb-4">Listado de Almacenes</h1>

    <!-- Mostrar mensaje de error si existe -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["Error"]
        </div>
    }

    <form asp-action="Index" method="get">
        <div class="row">
            <div class="col-12 col-md-4 mb-3">
                <div class="form-group">
                    <label class="control-label">Nombre</label>
                    <input type="text" name="nombre" value="@nombre" class="form-control" id="searchInput" placeholder="Buscar..." />
                </div>
            </div>
            <div class="col-12 col-md-4 mb-3">
                <div class="form-group">
                    <label class="control-label">Cantidad de Registros</label>
                    <select name="topRegistro" class="form-control">
                        <option value="10" selected="@(topRegistro == 10)">10</option>
                        <option value="20" selected="@(topRegistro == 20)">20</option>
                        <option value="60" selected="@(topRegistro == 60)">60</option>
                        <option value="100" selected="@(topRegistro == 100)">100</option>
                        <option value="500" selected="@(topRegistro == 500)">500</option>
                        <option value="1000" selected="@(topRegistro == 1000)">1000</option>
                        <option value="0" selected="@(topRegistro == 0)">Todos</option>
                    </select>
                </div>
            </div>
            <div class="col-12 col-md-4 mb-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">Buscar</button>
            </div>
        </div>
        <div class="row">
            <div class="col-12 text-right">
                <a class="btn btn-info" asp-action="Create">Ir a Crear</a>
            </div>
        </div>
    </form>

    <div class="table-responsive mt-3">
        <table class="table table-striped table-bordered" id="warehouseTable">
            <thead class="table-dark">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.WarehouseName)</th>
                    <th class="text-center">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.WarehouseName)</td>
                        <td class="text-center">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Editar</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Detalles</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Eliminar</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Controles de paginación (siempre visibles) -->
    <nav aria-label="Navegación de página">
        <ul class="pagination justify-content-center">
            <!-- Botón Anterior -->
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { nombre = nombre, topRegistro = topRegistro, page = currentPage - 1 })" aria-label="Anterior">
                        <span aria-hidden="true">« Anterior</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">« Anterior</span>
                </li>
            }

            <!-- Números de página -->
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { nombre = nombre, topRegistro = topRegistro, page = i })">@i</a>
                </li>
            }

            <!-- Botón Siguiente -->
            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { nombre = nombre, topRegistro = topRegistro, page = currentPage + 1 })" aria-label="Siguiente">
                        <span aria-hidden="true">Siguiente »</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">Siguiente »</span>
                </li>
            }
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Inicializa DataTable para la tabla
            $('#warehouseTable').DataTable({
                "paging": false, // Desactiva la paginación de DataTable
                "searching": false, // Desactiva la búsqueda de DataTable
                "ordering": true, // Activa el ordenamiento de columnas
                "info": true, // Muestra información de la tabla
                "autoWidth": false, // Desactiva el autoajuste de columnas
                "responsive": true, // Hace que la tabla sea responsiva
                "language": {
                    "zeroRecords": "No se encontraron resultados",
                    "info": "Mostrando START a END de TOTAL registros",
                    "infoEmpty": "Mostrando 0 a 0 de 0 registros",
                    "infoFiltered": "(filtrado de MAX registros totales)"
                }
            });
        });
    </script>
}